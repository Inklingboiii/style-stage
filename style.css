@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Mono:wght@400;700&display=swap');

:root {
  scroll-behavior: smooth;
  --hue: 280;
  --saturation: 75%;
  --lighting: 50%;

  --text-saturation: calc(var(--saturation) - 50%);
  --text-lighting: calc(var(--lighting) - 30%);
  --text-color: hsl(var(--hue), var(--text-saturation), var(--text-lighting));

  --color-primary: hsl(var(--hue), var(--saturation), var(--lighting));
  --color-primary-dark: hsl(var(--hue), var(--saturation), calc(var(--lighting) - 25%));
  --color-secondary: hsl(calc(var(--hue) - 60), var(--saturation), var(--lighting));
  --color-tertiary: hsl(calc(var(--hue) - 120), var(--saturation), var(--lighting));
  --color-quaternary: hsl(calc(var(--hue) - 180), var(--saturation), var(--lighting));

  --color-yellow: hsl(60, var(--saturation), var(--lighting));
  --color-orange: hsl(20, var(--saturation), var(--lighting));
}

/*
 * [Modified] Modern CSS Reset
 * @link https://github.com/hankchizljaw/modern-css-reset
*/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
ul {
  margin: 0;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  font-size: 100%;
  line-height: 1.5;
  text-rendering: optimizeSpeed;
  color: var(--text-color);
  font-family: 'Noto Sans Mono', monospace;
}

/* Gives every top level section margin besides the first one */
body > *:not(.skip-link) + * {
  margin-top: 3em;
}

/* Make images easier to work with */
img {
  display: block;
  max-width: 100%;
}

ul {
  list-style-type: none;
}
/* Enhance readability of text */
p,
blockquote {
  max-width: 75ch;
} 

/* Remove defaults */
a {
  text-decoration: none;
  --saturation: 100%;
  color: hsl(var(--hue), var(--saturation), var(--lighting));
}

/* Give links that are not buttons an underline on focus/hover */
/* Source: https://www.youtube.com/watch?v=_1vEGYWaaQY */
a:not([class*=link]) {
  background: linear-gradient(currentColor, currentColor);
  background-repeat: no-repeat;
  background-position: bottom left;
  background-size: 0% 0%;
  transition: background-size 0.35s cubic-bezier(0,1.5,1,1.5);
}


a:not([class*=link]):is(:hover, :focus) {
  background-size: 100% 0.15em;
}

/* Button */
[class*=link] {
  color: white;
  padding: 1em;
  background-color: var(--text-color);
  outline: 3px solid transparent;
  outline-offset: 3px;
  transition: outline-offset 0.3s ease-in, outline-color 0.3s ease-out;
  text-align: center;
}

[class*=link]:is(:hover, :focus) {
  outline-color: white;
  outline-offset: -0.5em;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Make skip link invisible, source:  https://webaim.org/techniques/css/invisiblecontent/*/
.skip-link {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  padding: 1em;
}

.skip-link:focus {
  top: 0;
  left: 0;
  width: auto;
  height: auto;
  animation: 3s wobble linear infinite;
}

@keyframes wobble {
  25% {
    border-radius: 0 30% / 0 15%;
  }

  50% {
    border-radius: 30% 0 / 15% 0;
  }

  75% {
    border-radius: 0 50% / 0 30%;
  }
  100% {
    border-radius: none;
  }
}
h1,
h2,
h3,
h4 {
  line-height: 1;
  text-align: center;
  color: var(--color-secondary);
}

h3 {
  color: var(--color-tertiary);
}

h4 {
  color: var(--color-quaternary);
}

/* Header */

header {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

header::after {
  content: '';
  position: absolute;
  inset: 0;
  z-index: 2;
  background: linear-gradient(white, var(--color-primary-dark));
  mix-blend-mode: overlay;
  clip-path: polygon(0 0, 100% 0, 50% 50%, 0 100%);
  opacity: 0.6;
  pointer-events: none;
}

header > .container {
  flex-grow: 1;
  display: flex;
  gap: 1em;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}

/* Main heading */
h1 {
  font-size: 6rem;
  position: relative;
  color: var(--color-primary);
}

h1::after {
  content: '';
  background-color: currentColor;
  position: absolute;
  left: -10%;
  right: -10%;
  bottom: -65%;
  height: 30%;
  transform: perspective(10rem) rotateX(60deg) translateY(-5rem);
  filter: blur(1rem);
  opacity: 0.5;
}

header  p {
  text-align: center;
}

/* Github button */
.link-github {
  display: flex;
  align-items: center;
  flex-direction: row-reverse;
  gap: 1em;
  border-radius: 99999999999999999px;
}

.link-github span {
  display: grid;
  place-items: center;
}
.link-github svg {
  width: 1em;
  height: 1em;
  fill: var(--color-yellow);
  transition: transform 0.3s;
}

.link-github:is(:hover, :focus) svg {
  animation: spin 1.5s;
}

@keyframes spin {

  50% {
    transform: perspective(1em) translateZ(0.5em) rotateX(181deg) rotateY(-181deg);
  }

  to {
    transform: perspective(1em) translateZ(0) rotateX(360deg) rotateY(-360deg);
  }
}

/* Nav */ 
nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
  background-color: var(--color-orange);
  padding: 1em;
}

nav ul {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-around;
  margin: 0;
  padding: 0;
}

nav ul a {
  color: white;
}

/* Main */

main {
  padding-inline: 1em;
}

main > .container > * + * {
  margin-top: 3em;
}
/* About */

#about > section,
#about {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2em;
  width: 100%;
}

/* Targets all cards */
#about > section > *:not(h2) {
  background-color: hsl(var(--hue), var(--saturation), calc(var(--lighting) - 25%));
  color: white;
  padding: 1em;
  box-shadow: hsl(var(--hue), 25%, 75%) 0em 0em 0.5em 0.3em;
  border-radius: 0.5em;
}

#about > section > :nth-child(2) {
  --hue: 230;
  transform: perspective(3em) rotateX(1deg);
}

#about > section > :nth-child(3) {
  --hue: 260;
  transform: perspective(1em) skewX(5deg);
  width: 100%;
  text-align: center;
}

#about > section > :nth-child(4) {
  --hue: 290;
  transform: perspective(10em) rotateY(1deg);
}

#about > section > :nth-child(5) {
  --hue: 320;
  transform: perspective(1em) skewY(1deg);
}

#about > section > :nth-child(6) {
  --hue: 350;
}

#about > section a {
  color: hsl(calc(var(--hue) + 180), var(--saturation), var(--lighting));
}

#about > section > ul {
  width: 100%;
  display: flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  gap: 1em;
}

#about > section > ul > li {
  flex-basis: 100%;
  flex-shrink: 0;
  text-align: center;
  scroll-snap-align: start;
}

/* Guidelines */
#guidelines > section {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1em;
  }

  #guidelines > section > p:nth-of-type(1) {
    text-align: center;
  }

/* Contribute  */

#contribute > section,
#contribute {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1em;
}

#contribute ol {
  counter-reset: number;
}

#contribute ol li {
  counter-increment: number;
  position: relative;
  margin-block: 1em;
}

#contribute ol li::after {
  content: counter(number);
  color: hsl(var(--hue), var(--saturation), var(--lighting));
  opacity: 0.35;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: scale(3) rotate(-20deg) translate(-50%, -50%);
  z-index: -1;
}

#contribute ol li:nth-child(1)::after {
  --hue: 0;
}

#contribute ol li:nth-child(2)::after {
  --hue: 90;
}

#contribute ol li:nth-child(3)::after {
  --hue: 180;
}

#contribute ol li:nth-child(4)::after {
  --hue: 270;
}

#files > .container {
  display: flex;
  flex-direction: column;
  gap: 1em;
  padding: 2em; 
  position: relative;
  background: white;
}

/* Pseudo-element as performant box-shadow animation*/
#files > .container::after {
  content: '';
  position: absolute;
  inset: -0.5em;
  z-index: -1;
  background-color: var(--text-color);
  filter: blur(0.3em);
  animation: wobble 20s infinite;
}

/* Current styles */
.profile > .container {
  display: flex;
  flex-direction: column;
  gap: 1em;
  align-items: center;
}

.profile ul {
  background: conic-gradient(var(--text-color), var(--color-primary-dark));
  color: white;
  padding: 3em 1.5em
}

.profile ul a {
  color: var(--color-quaternary);
}

.profile > .container > a {
  position: relative;
  padding: 1em;
  border: solid 1px;
  /* Remove regular underline animation  */
  background: transparent;
  transition: unset;
}

.profile > .container > a:before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  background: linear-gradient(90deg, var(--color-quaternary), var(--color-yellow));
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.35s linear;
}

.profile > .container > a:is(:hover, :focus):before {
  transform-origin: left;
  transform: unset;
}

/* Featured styles */

#styles > .container {
  /* Hide overflow caused by the rotating tetrahedron */
  overflow: hidden;
}
.features {
  position: relative;
  perspective: 100em;
  transform-style: preserve-3d;
  /* Make the text clearer  */
  transform:  translateZ(var(--distance));
  min-height: var(--size);
  animation: spin-y 10s linear infinite;
  --size: clamp(10em, calc(15vw + 5em), 20em);
  /* Divide the halved width by the tangent of the halved 120 degrees rotated */
  --distance: calc((var(--size)) / 1.732);
}

.features > li {
  display: grid;
  place-items: center;
  position: absolute;
  inset: 0;
  height: var(--size);
  /* Double the width so the faces can reach each other when rotated */
  width: calc(var(--size) * 2);
  margin-inline: auto;
}

  /* Note: order of transformations matter */
.features > li:nth-child(1) {
  transform: translateZ(var(--distance));
  background-color:var(--color-tertiary);
}

.features > li:nth-child(2) {
  transform: rotateY(120deg) translateZ(var(--distance));
  background-color: var(--color-quaternary);
}

.features > li:nth-child(3) {
  transform: rotateY(240deg) translateZ(var(--distance));
  background-color: var(--color-yellow);
}

@keyframes spin-y {
  23% {
    transform: rotateY(0deg);
  }

  33%,
  56% {
    transform: rotateY(120deg);
  }

  66%,
  90% {
      transform: rotateY(240deg);
  }
  100% {
    transform: rotateY(360deg);
  }
}
/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
